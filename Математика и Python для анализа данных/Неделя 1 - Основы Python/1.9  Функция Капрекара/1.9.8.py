# kaprekar_loop(n) ver.2
# Пришло время объединить все наши наработки.
#
# Напишите функцию kaprekar_loop(n), которая принимает целое число, и запускающую "Процесс Капрекара"
# (если это возможно), выводящее на печать каждое число цикла с новой строки до тех пор,
# пока не будет получено число Капрекара.
#
# Конечных чисел Капрекара (таких, которые в результате процесса переходят сами в себя)
# известно 4: 495, 6174, 549945, 631764.
# Для некоторых 6-значных чисел возможно не будет найдено число Капрекара,
# но процесс "зациклится", т.е. одни и те же числа будут получаться по кругу.
# В этом случае необходимо прервать процедуру на первом повторном числе.
#
# Таким образом возможны 3 случая:
# Число не удовлетворяет условиям процесса Капрекара - выводим сообщение "Ошибка!
# На вход подано число {}, не удовлетворяющее условиям процесса Капрекара"
# Процесс Капрекара сойдётся к числу Капрекара (495, 6174, 549945 или 631764) -
# выводим на печать все числа, начиная с исходного и до числа Капрекара, каждое с новой строки
# Процесс Капрекара зациклится - выводим все числа до момента зацикливания,
# после чего выводим сообщение "Следующее число - {}, кажется процесс зациклился..."
#
#
# Примечание1. В этой задаче не нужно ничего считывать и ничего выводить на печать. Только реализовать функцию.
#
# Примечание2. Рекомендуем использовать ранее написанные функции
# numerics(n), kaprekar_check(n) и kaprekar_step(L) чтобы ваш код был проще и читабельнее.
#
# Sample Input 1:
#
# 103304
# Sample Output 1:
#
# 103304
# 431766
# 631764
# Sample Input 2:
#
# 103303
# Sample Output 2:
#
# 103303
# 331767
# 642654
# 420876
# 851742
# 750843
# 840852
# 860832
# 862632
# Следующее число - 642654, кажется процесс зациклился...
# Sample Input 3:
#
# 99
# Sample Output 3:
#
# Ошибка! На вход подано число 99, не удовлетворяющее условиям процесса Капрекара
# Sample Input 4:
#
# 100
# Sample Output 4:
#
# Ошибка! На вход подано число 100, не удовлетворяющее условиям процесса Капрекара
# Sample Input 5:
#
# 9999999999999
# Sample Output 5:
#
# Ошибка! На вход подано число 9999999999999, не удовлетворяющее условиям процесса Капрекара
# Sample Input 6:
#
# 123
# Sample Output 6:
#
# 123
# 198
# 792
# 693
# 594
# 495
# Sample Input 7:
#
# 1234
# Sample Output 7:
#
# 1234
# 3087
# 8352
# 6174

def numerics(n):
    return list(map(int, list(str(n))))

def kaprekar_step(L):
    a = ''.join(map(str, sorted(L)))
    b = int(a[::-1])
    a = int(a)
    return b - a

def kaprekar_check(n):
    if n == 100 or n == 1_000 or n == 100_000:
        return False
    elif len(set(numerics(n))) == 1:
        return False

    length = len(numerics(n))
    return length == 3 or length == 4 or length == 6


def kaprekar_loop(n):
    if not kaprekar_check(n):
        print("Ошибка! На вход подано число", str(n) + ", не удовлетворяющее условиям процесса Капрекара")
    else:
        old = [n]
        while n != 495 and n != 6174 and n != 549945 and n != 631764:
            print(n)
            n = kaprekar_step(numerics(n))
            if n in old:
                print("Следующее число -", str(n) + ", кажется процесс зациклился...")
                break
            old.append(n)

        if n == 495 or n == 6174 or n == 549945 or n == 631764:
            print(n)
